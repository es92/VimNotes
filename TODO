========================================================

----   0. host + start using it
----      - checkout certbot-nginx for archlinux
----   1. multiple windows editing different documents
       2. add alternative editor for mobile
        - move vim into editor wrapper
        - https://ace.c9.io/
       3. add encryption
        - https://github.com/rndme/aes4js
       4. offline support
       5. redo delete file so it works on mobile
       6. versioning
       7. polish
        - C-v (visual block) annoying rn
        - sometimes text "sticks" to bottom of window
        - window not using full height
        - gray boxes around letters
        - summary too long
        - smartindent not working
        - visual block does not support blockwise operators (see +visualextra)
        - more tests merging notes

========================================================

----   1. clipboard
----     a. write
----     b. read
----     c. support multiline copy/paste
----     d. support special characters "
       2. multiple windows editing different documents
       3. fix graphical issues
       4. add alternative editor for mobile
       5. add encryption
       6. offline support
       7. redo delete file so it works on mobile

========================================================

----    1. load file on launch
----    2. save file on events
----      a. hook up events
----      b. write file to localstorage
----    3. add gui
----    4. show file on click
----    5. autosave edited files
----      a. create random filename on launch
----      b. autosave on edit
----      c. display first nonempty lines in list
----    6. support custom vimrc
----    7. sort by timestamp
----    8. load / saving folders
----      a. basic functionality
----      c. drag files
----      d. drag folders
----    9. drag items to trash to delete
----    10. load / save to external db
----      a. convert save/load to async
----      b. add dropbox w/ accesstoken
----      c. test unicode
----      d. add authentication
----      e. remove double upload (cancel earlier uploads if there's a later one)
        11. multiple windows editing different documents
        12. clipboard
        13. fix graphical issues
        14. add alternative editor for mobile
        15. add encryption
        16. offline support
        17. redo delete file so it works on mobile

========================================================

see filedb:3 (dropbox needs implementing)
  - thoughts: 
    - db save/load must be async
    - need to test unicode
    - need to setup authentication

========================================================

----    1. load file on launch
----    2. save file on events
----      a. hook up events
----      b. write file to localstorage
----    3. add gui
----    4. show file on click
----    5. autosave edited files
----      a. create random filename on launch
----      b. autosave on edit
----      c. display first nonempty lines in list
----    6. support custom vimrc
----    7. sort by timestamp
----    8. load / saving folders
----      a. basic functionality
----      c. drag files
----      d. drag folders
----    9. drag items to trash to delete
        10. load / save to external db
          a. implement dropbox
        11. multiple windows editing different documents
        12. clipboard
        13. fix graphical issues
        14. add alternative editor for mobile
        15. add encryption
        16. offline support
        17. redo delete file so it works on mobile

========================================================

----    1. load file on launch
----    2. save file on events
----      a. hook up events
----      b. write file to localstorage
----    3. add gui
----    4. show file on click
----    5. autosave edited files
----      a. create random filename on launch
----      b. autosave on edit
----      c. display first nonempty lines in list
----    6. support custom vimrc
----    7. sort by timestamp
        8. load / saving folders
----      a. basic functionality
          b. drag items to trash to delete (remove x)
----      c. drag files
----      d. drag folders
        9. load / save to external db
        10. multiple windows editing different documents
        11. clipboard
        12. fix graphical issues
        13. add alternative editor for phone
        14. add encryption
        15. offline support

========================================================

show file on click

see
/mnt/share/Dropbox/projects/old/es-context/client/vimEditor.js
/mnt/share/Dropbox/projects/old/es-context/client/wrappedVim.js

========================================================

----    1. load file on launch
----    2. save file on events
----      a. hook up events
----      b. write file to localstorage
----    3. add gui
----    4. show file on click
        5. load / saving multiple files
        6. load / save to external db

========================================================

decide on GUI
  (copy apple notes?)

========================================================

see es-vim.js/web/eventfs.js

1. load files on launch
2. save files on events
  a. hook up events
  b. write files to localstorage

========================================================

2. switch that vim to use a BrowserFS instead of NodeFS
3. fire events when that NodeFS is modified
4. push/pull localstorage files from a remote server
6. add login
5. push/pull localstorage files from a remote server with merging
6. add offline support
7. add alternative editor for on phone

========================================================

1. pull in es-vim.js 
2. switch that vim to use a BrowserFS instead of NodeFS
3. fire events when that NodeFS is modified
4. push/pull localstorage files from a remote server
6. add login
5. push/pull localstorage files from a remote server with merging
6. add offline support
7. add alternative editor for on phone

========================================================

1. learn how remote_linux did loading / saving
  - findings:
    - there was a NODEFS module for when emscripten is compiled to js to use local fs
    - I had replaced NODEFS calls to fs with synchronous calls to fs through the filesystem

2. load / save to localstorage fs
3. load / save to remote fs
4. load / save to remote fs with login
5. load / save to remote fs with login + encryption
6. add alternative editor for on phone
7. add offline support with version reintegration

========================================================
